{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AuthRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit, OnDestroy {\n  isLoading: boolean = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onSignup(form: NgForm) {\n    if(form.invalid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy(): void {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n  <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input matInput type=\"email\" placeholder=\"E-Mail\" name=\"email\" ngModel #emailInput=\"ngModel\" required email>\n      <mat-error *ngIf=\"emailInput.invalid\">\n        Please enter a valid email\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput type=\"password\" name=\"password\" ngModel placeholder=\"Password\" #passwordInput=\"ngModel\" required>\n      <mat-error *ngIf=\"passwordInput.invalid\">\n        Please enter a valid password\n      </mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\">Signup</button>\n  </form>\n</mat-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    FormsModule,\n    AuthRoutingModule\n  ]\n})\n\nexport class AuthModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading: boolean = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onLogin(form: NgForm) {\n    if(form.invalid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy(): void {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input matInput type=\"email\" placeholder=\"E-Mail\" name=\"email\" ngModel #emailInput=\"ngModel\" required email>\n      <mat-error *ngIf=\"emailInput.invalid\">\n        Please enter a valid email\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput type=\"password\" name=\"password\" ngModel placeholder=\"Password\" #passwordInput=\"ngModel\" required>\n      <mat-error *ngIf=\"passwordInput.invalid\">\n        Please enter a valid password\n      </mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\">Login</button>\n  </form>\n</mat-card>\n"],"sourceRoot":"webpack:///"}