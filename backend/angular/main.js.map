{"version":3,"sources":["./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/posts.module.ts","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/auth/auth.guard.ts","./src/app/error-interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/posts/posts.service.ts","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/posts/post-create/mime-type.validator.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.service.ts","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\nimport { IPost } from '../post.model';\nimport { PostsService } from '../posts.service';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\n\nexport class PostListComponent implements OnInit, OnDestroy {\n\n  posts: IPost[] = [];\n  isLoading: boolean = false;\n  totalPosts: number = 10;\n  postsPerPage: number = 2;\n  currentPage: number = 1;\n  pageSizeOptions: number[] = [1, 2, 5, 10];\n  userIsAuthenticated: boolean = false;\n  userId: string;\n\n\n  private postsSub: Subscription;\n  private authStatusSubs: Subscription;\n\n  constructor(\n    public postsService: PostsService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n\n    this.userId = this.authService.getUserId();\n\n    this.postsSub = this.postsService.getPostUpdateListener()\n      .subscribe((postData: { posts: IPost[], postCount: number }) => {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      });\n\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authStatusSubs = this.authService.getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      });\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(pageData.pageSize, this.currentPage);\n  }\n\n  onDelete(postId: string) {\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(response => {\n      this.postsService.getPosts(this.postsPerPage, this.currentPage)\n    }, error => {\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSubs.unsubscribe();\n  }\n\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n<mat-accordion *ngIf=\"!isLoading\">\n  <mat-expansion-panel *ngFor=\"let post of posts\">\n    <mat-expansion-panel-header>\n      {{ post.title }}\n    </mat-expansion-panel-header>\n    <div class=\"post-image\">\n      <img [src]=\"post.imagePath\" [alt]=\"post.title\">\n    </div>\n    <p>{{ post.content }}</p>\n    <mat-action-row *ngIf=\"userIsAuthenticated && userId === post.creator\">\n      <a mat-button color=\"primary\" [routerLink]=\"['/edit', post.id]\">EDIT</a>\n      <button mat-button color=\"warn\" (click)=\"onDelete(post.id)\">DELETE</button>\n    </mat-action-row>\n  </mat-expansion-panel>\n</mat-accordion>\n\n<mat-paginator [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOptions\"\n  (page)=\"onChangedPage($event)\" *ngIf=\"posts.length > 0\"></mat-paginator>\n\n<p *ngIf=\"posts.length <= 0 && !isLoading\" class=\"mat-body-1 info-text\">No posts added yet</p>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { PostCreateComponent } from './post-create/post-create.component';\nimport { PostListComponent } from './post-list/post-list.component';\n\n@NgModule({\n  declarations: [\n    PostCreateComponent,\n    PostListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    RouterModule\n  ]\n})\nexport class PostsModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  templateUrl: \"./error.component.html\"\n})\nexport class ErrorComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string }) { }\n}\n","<h2 mat-mat-dialog-title>An Error Occurred!</h2>\n<div mat-dialog-content>\n  <p class=\"mat-body-1\">{{data.message}}</p>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Okay</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    const isAuth = this.authService.getIsAuth();\n\n    if(!isAuth) {\n      this.router.navigate(['/auth/login']);\n    }\n\n    return isAuth;\n  }\n\n}\n\n","import {\n  HttpErrorResponse,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorComponent } from './error/error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(public dialog: MatDialog) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n\n        let errorMessage = 'An unknown error occurred!';\n        if(error.error.message) {\n          errorMessage = error.error.message\n        }\n\n        this.dialog.open(ErrorComponent, {\n          data: {\n            message: errorMessage\n          }\n        });\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.autoAuthUser();\n  }\n\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment';\n\nimport { IPost } from './post.model';\n\nconst BACKEND_URL = environment.apiUrl + '/posts/';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PostsService {\n\n  private posts: IPost[] = [];\n  private postsUpdated = new Subject<{ posts: IPost[], postCount: number }>();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  getPosts(postsPerPage: number, currentPage: number) {\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\n    return this.http.get<{ message: string, posts: any[], maxPosts: number }>(BACKEND_URL + queryParams)\n      .pipe(map(postData => {\n        return {\n          posts: postData.posts.map(post => {\n            return {\n              title: post.title,\n              content: post.content,\n              id: post._id,\n              imagePath: post.imagePath,\n              creator: post.creator\n            };\n          }), maxPosts: postData.maxPosts\n        };\n      }))\n      .subscribe((transformedPostData) => {\n        console.log(transformedPostData);\n        this.posts = transformedPostData.posts;\n        this.postsUpdated.next({\n          posts: [...this.posts],\n          postCount: transformedPostData.maxPosts\n        });\n      });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  getPostById(id: string) {\n    return this.http.get<{\n      _id: string,\n      title: string,\n      content: string,\n      imagePath: string,\n      creator: string\n    }>(\n      BACKEND_URL + id);\n  }\n\n  addPost(title: string, content: string, image: File) {\n\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, title)\n\n    this.http.post<{ message: string, post: IPost }>(BACKEND_URL, postData)\n      .subscribe(_ => {\n        this.router.navigate(['/']);\n      })\n  }\n\n  updatePost(id: string, title: string, content: string, image: File | string) {\n    let postData: IPost | FormData;\n    if(typeof image === 'object') {\n      postData = new FormData();\n      postData.append('id', id);\n      postData.append('title', title);\n      postData.append('content', content);\n      postData.append('image', image, title)\n    } else {\n      postData = {\n        id: id,\n        title: title,\n        content: content,\n        imagePath: image,\n        creator: null\n      };\n    }\n\n    this.http.put(BACKEND_URL + id, postData)\n      .subscribe(_ => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete(BACKEND_URL + postId);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HeaderComponent } from './header/header.component';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './error-interceptor';\nimport { ErrorComponent } from './error/error.component';\n\nimport { AngularMaterialModule } from './angular-material.module';\nimport { PostsModule } from './posts/posts.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    PostsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated: boolean = false;\n  private authListenerSubs: Subscription;\n  constructor(private authService: AuthService) { };\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n\n    this.authListenerSubs = this.authService.getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n      });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n\n}\n","<mat-toolbar color=\"primary\">\n  <span><a routerLink=\"/\">MyMessages</a></span>\n\n  <span class=\"spacer\"></span>\n  <ul>\n    <li *ngIf=\"userIsAuthenticated\">\n      <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">New Post</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink=\"/auth/login\" routerLinkActive=\"mat-accent\">Login</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink=\"/auth/signup\" routerLinkActive=\"mat-accent\">Signup</a>\n    </li>\n    <li *ngIf=\"userIsAuthenticated\" (click)=\"onLogout()\">\n      <button mat-button>Logout</button>\n    </li>\n  </ul>\n</mat-toolbar>\n","import { AbstractControl } from '@angular/forms'\nimport { Observable, Observer, of } from 'rxjs'\n\nexport const mimetype = (control: AbstractControl): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n\n  if(typeof control.value === 'string') {\n    return of(null);\n  }\n\n\n  const file = control.value as File;\n  const fileReader = new FileReader();\n\n  const fileReaderObservable = Observable.create((observer: Observer<{ [key: string]: any }>) => {\n    fileReader.addEventListener('loadend', () => {\n      const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n\n      let header = '';\n      let isValid = false;\n\n      for(const item of arr) {\n        header += item.toString(16);\n      }\n\n      switch(header) {\n        case \"89504e47\":\n          isValid = true;\n          break;\n        case \"ffd8ffe0\":\n        case \"ffd8ffe1\":\n        case \"ffd8ffe2\":\n        case \"ffd8ffe3\":\n        case \"ffd8ffe8\":\n          isValid = true;\n          break;\n        default:\n          isValid = false; // Or you can use the blob.type as fallback\n          break;\n      }\n\n      if(isValid) {\n        observer.next(null);\n      } else {\n        observer.next({ invalidMimeType: true })\n      }\n\n      observer.complete();\n    });\n\n    fileReader.readAsArrayBuffer(file);\n  });\n\n  return fileReaderObservable;\n}\n\n\n// const getMimetype = (signature) => {\n//   switch(signature) {\n//     case '89504E47':\n//       return 'image/png'\n//     case '47494638':\n//       return 'image/gif'\n//     case '25504446':\n//       return 'application/pdf'\n//     case 'FFD8FFDB':\n//     case 'FFD8FFE0':\n//     case 'FFD8FFE1':\n//       return 'image/jpeg'\n//     case '504B0304':\n//       return 'application/zip'\n//     default:\n//       return 'Unknown filetype'\n//   }\n// }\n","import { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) { };\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      //set() set a new header if it doesn't exists;\n      headers: req.headers.set('Authorization', \"Bearer \" + authToken)\n    });\n\n    return next.handle(authRequest);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { AuthData } from './auth-data.model';\n\nimport { environment } from 'src/environments/environment';\n\nconst BACKEND_URL = environment.apiUrl + '/user/';\n\n@Injectable({ providedIn: 'root' })\n\nexport class AuthService {\n\n  private isAuthenticated: boolean = false;\n  private token: string;\n  private tokenTimer: any;\n  private userId: string;\n\n  private authStatusListener = new Subject<boolean>();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http.post(BACKEND_URL + '/signup', authData)\n      .subscribe(_ => {\n        this.router.navigate(['/']);\n      }, error => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n  login(email: string, password: string) {\n    const authData: AuthData = { email, password };\n    this.http.post<{ token: string, expiresIn: number, userId: string }>(\n      BACKEND_URL + '/login',\n      authData)\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n\n        if(token) {\n          const expiresInDuration = response.expiresIn;\n\n          this.setAuthTimer(expiresInDuration);\n\n          this.isAuthenticated = true;\n          this.userId = response.userId;\n          this.authStatusListener.next(true);\n\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n\n          this.saveAuthData(token, expirationDate, this.userId);\n\n          this.router.navigate(['/']);\n        }\n\n      }, error => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n\n    if(!authInformation) {\n      return;\n    }\n\n    const now = new Date();\n    //this is in milliseconds\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n\n    if(expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.userId = null;\n    this.router.navigate(['/']);\n  }\n\n  private setAuthTimer(duration: number) {\n    console.log('Setting timer: ' + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n    localStorage.setItem('userId', userId);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('userId');\n  }\n\n  private getAuthData(): { token: string, expirationDate: Date, userId: string } {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    const userId = localStorage.getItem('userId');\n\n    if(!token && !expirationDate) {\n      return;\n    }\n\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule\n  ]\n})\nexport class AngularMaterialModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\n\nconst routes: Routes = [\n  { path: '', component: PostListComponent },\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { IPost } from '../post.model';\nimport { PostsService } from '../posts.service';\nimport { mimetype } from './mime-type.validator';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\n\nexport class PostCreateComponent implements OnInit, OnDestroy {\n  enteredTitle: string = '';\n  enteredContent: string = '';\n  post: IPost;\n  isLoading: boolean = false;\n\n  form: FormGroup;\n\n  imagePreview: string;\n\n  private mode: string = 'create';\n  private postId: string;\n  private authStatusSub: Subscription;\n\n  constructor(\n    public postsService: PostsService,\n    public route: ActivatedRoute,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener()\n      .subscribe(_ => {\n        this.isLoading = false;\n      });\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      content: new FormControl(null, { validators: [Validators.required] }),\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimetype]\n      })\n    })\n\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if(paramMap.has('postId')) {\n        this.mode = 'edit';\n        this.postId = paramMap.get('postId');\n        this.isLoading = true;\n        this.postsService.getPostById(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath,\n            creator: postData.creator\n          };\n\n          this.form.setValue({\n            title: this.post.title,\n            content: this.post.content,\n            image: this.post.imagePath\n          })\n        });\n      } else {\n        this.mode = 'create';\n        this.postId = null;\n      }\n    })\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      image: file\n    });\n    this.form.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if(this.form.invalid) {\n      return;\n    }\n\n    this.isLoading = true;\n    if(this.mode === 'create') {\n      this.postsService.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n      );\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n      );\n    }\n\n    this.form.reset();\n  }\n\n  ngOnDestroy(): void {\n    this.authStatusSub.unsubscribe();\n  }\n\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n  <form [formGroup]=\"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input type=\"text\" matInput formControlName=\"title\" placeholder=\"Post Title\">\n      <mat-error *ngIf=\"form.get('title').invalid\">\n        Please enter a post title\n      </mat-error>\n    </mat-form-field>\n\n    <div>\n      <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Pick Image</button>\n      <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\n    </div>\n\n    <div class=\"image-preview\" *ngIf=\"!!imagePreview && form.get('image').valid\">\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\">\n    </div>\n\n    <mat-form-field>\n      <textarea matInput rows=\"4\" formControlName=\"content\" placeholder=\"Post Content\"></textarea>\n      <mat-error *ngIf=\"form.get('content').invalid\">\n        Please enter a post content\n      </mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"accent\" type=\"submit\">Save Post</button>\n  </form>\n</mat-card>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}